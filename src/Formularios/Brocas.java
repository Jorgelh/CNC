/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import com.sun.webkit.dom.RectImpl;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author jluis
 */
public class Brocas extends javax.swing.JFrame {

    double a = 0.0001;
    DecimalFormat formato1 = new DecimalFormat("0.0000");

    /**
     * Creates new form Brocas
     */
    public Brocas() {

        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
        }

        initComponents();
        setLocationRelativeTo(null);

    }

    private void calculorpm() {
        double cut = 0.160;
        double deep;
        double rpm;
        double avance;
        double pi = 3.82;

        DecimalFormat formatter = new DecimalFormat("0.000");
        DecimalFormat formatter2 = new DecimalFormat("0");
        DecimalFormat formatter3 = new DecimalFormat("0.00");
        deep = Double.parseDouble(diametro.getText()) * cut;
        CUT.setText(formatter.format(deep));
        rpm = Double.parseDouble(sfmtext.getText()) * pi / Double.parseDouble(diametro.getText());
        RPM.setText(formatter2.format(rpm));

        avance = rpm * Double.parseDouble(chipload.getSelectedItem().toString()) * 2;

        AVANCE.setText(formatter3.format(avance));

    }
    
    private void calcularfinal(){
      double dia = Double.valueOf(diametro.getText());
        if (dia >= 0.0098 && dia <= 0.0625) {
            RPM.setText("4500");
            AVANCE.setText("3");
            sfmtext.setText("100");
            maquinado.setSelectedItem("SELECCIONAR...");
            chipload.removeAllItems();

            if (dia >= 0.0098 && dia <= 0.0300) {
                CUT.setText("0.0080");
            }
            else if (dia >= 0.0305 && dia <= 0.0625) {
                CUT.setText("0.0100");
            }
        } else if (dia >= 0.0635 && dia <= 1.000) {
            calculorpm();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        diametro = new javax.swing.JTextField();
        sfmtext = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        chipload = new javax.swing.JComboBox<>();
        maquinado = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        calcular = new javax.swing.JButton();
        material = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        SFMTEXT = new javax.swing.JLabel();
        HB = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        RPM = new javax.swing.JTextField();
        AVANCE = new javax.swing.JTextField();
        CUT = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CALCULADORA DE BROCAS CNC");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 0));
        jPanel1.setToolTipText("CALCULADORA DE BROCAS CNC");
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBackground(new java.awt.Color(102, 204, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("DIAMETRO DE BROCA");

        diametro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        diametro.setForeground(new java.awt.Color(255, 0, 0));
        diametro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diametroActionPerformed(evt);
            }
        });
        diametro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                diametroKeyReleased(evt);
            }
        });

        sfmtext.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sfmtext.setForeground(new java.awt.Color(255, 0, 0));
        sfmtext.setEnabled(false);
        sfmtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sfmtextActionPerformed(evt);
            }
        });
        sfmtext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sfmtextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sfmtextKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("SFM");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("MAQUINADO");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("CHIP LOAD");

        chipload.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chipload.setEnabled(false);
        chipload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiploadActionPerformed(evt);
            }
        });

        maquinado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        maquinado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LIGHT", "MEDIUM", "HEAVY" }));
        maquinado.setEnabled(false);
        maquinado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maquinadoActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/broca.jpg"))); // NOI18N
        jLabel9.setText("jLabel9");

        calcular.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        calcular.setText("CALCULAR");
        calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularActionPerformed(evt);
            }
        });

        material.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        material.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALMUNIO", "FIBRA DE VIDRIO", "PHENOLIC", "COLD ROLLED 1045", "ACERO O1 - A2", "ACERO K110", "ACERTO INOXIDABLE SERIE 304", "BRONCE", "BRASS - LATON" }));
        material.setEnabled(false);
        material.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                materialActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("MATERIAL");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("DUREZA HB");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("SFM ");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("   MIN    -    MAX");

        SFMTEXT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SFMTEXT.setForeground(new java.awt.Color(255, 0, 0));
        SFMTEXT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        HB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        HB.setForeground(new java.awt.Color(255, 0, 0));
        HB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(66, 66, 66))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SFMTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(52, 52, 52)
                        .addComponent(jLabel13)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(SFMTEXT, javax.swing.GroupLayout.DEFAULT_SIZE, 8, Short.MAX_VALUE)
                        .addGap(31, 31, 31))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(HB)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(diametro)
                            .addComponent(maquinado, 0, 230, Short.MAX_VALUE))))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(material, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chipload, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sfmtext, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(calcular)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(diametro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(sfmtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(chipload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(maquinado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(material, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(calcular, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CALCULO DE VELOCIDAD DE BROCAS");

        jPanel3.setBackground(new java.awt.Color(51, 204, 0));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("RPM");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("AVANCE");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("DEEP CUT");

        RPM.setEditable(false);
        RPM.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        RPM.setForeground(new java.awt.Color(0, 0, 255));
        RPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RPMActionPerformed(evt);
            }
        });

        AVANCE.setEditable(false);
        AVANCE.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        AVANCE.setForeground(new java.awt.Color(0, 0, 255));

        CUT.setEditable(false);
        CUT.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CUT.setForeground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RPM, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(AVANCE, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CUT, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(RPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(AVANCE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(CUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jButton1.setText("INCH / MM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Drill Diameter");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(89, 89, 89)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void maquinadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maquinadoActionPerformed

        chipload.removeAllItems();
        double dia = Double.valueOf(diametro.getText());

        if (dia >= 0.0098 && dia <= 0.0595) {

            RPM.setText("4500");
            AVANCE.setText("3");

            if (dia >= 0.0098 && dia <= 0.0300) {
                CUT.setText("0.0080");
            }
            if (dia >= 0.0300 && dia <= 0.0625) {
                CUT.setText("0.0100");
            }

        } else if (dia >= 0.0625 && dia <= 0.125) {
            
            if (maquinado.getSelectedItem().toString().equalsIgnoreCase("LIGHT")) {
                for (double f = 0.0005; f <= 0.0011;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("MEDIUM")) {
                for (double f = 0.0010; f <= 0.0021;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("HEAVY")) {
                for (double f = 0.0020; f <= 0.0040;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            }

        } else if (dia >= 0.126 && dia <= 0.250) {

            if (maquinado.getSelectedItem().toString().equalsIgnoreCase("LIGHT")) {
                for (double f = 0.0010; f <= 0.0030;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }

            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("MEDIUM")) {
                for (double f = 0.0030; f <= 0.0051;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("HEAVY")) {
                for (double f = 0.0040; f <= 0.0061;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            }
        } else if (dia >= 0.251 && dia <= 0.375) {

            if (maquinado.getSelectedItem().toString().equalsIgnoreCase("LIGHT")) {
                for (double f = 0.0030; f <= 0.0051;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("MEDIUM")) {
                for (double f = 0.0050; f <= 0.0071;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("HEAVY")) {
                for (double f = 0.0060; f <= 0.0100;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }

            }
        } else if (dia >= 0.376 && dia <= 0.500) {
            if (maquinado.getSelectedItem().toString().equalsIgnoreCase("LIGHT")) {
                for (double f = 0.0040; f <= 0.0061;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("MEDIUM")) {
                for (double f = 0.0050; f <= 0.0081;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("HEAVY")) {
                for (double f = 0.0080; f <= 0.0120;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            }
        } else if (dia >= 0.501 && dia <= 0.750) {
            if (maquinado.getSelectedItem().toString().equalsIgnoreCase("LIGHT")) {
                for (double f = 0.0050; f <= 0.0071;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("MEDIUM")) {
                for (double f = 0.0070; f <= 0.0100;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("HEAVY")) {
                for (double f = 0.0090; f <= 0.0140;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }

            }
        } else if (dia >= 0.751 && dia <= 1.000) {
            if (maquinado.getSelectedItem().toString().equalsIgnoreCase("LIGHT")) {
                for (double f = 0.0070; f <= 0.0100;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("MEDIUM")) {
                for (double f = 0.0090; f <= 0.0140;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            } else if (maquinado.getSelectedItem().toString().equalsIgnoreCase("HEAVY")) {
                for (double f = 0.0140; f <= 0.0200;) {
                    chipload.addItem(formato1.format(f));
                    f = f + a;
                }
            }
        }
      chipload.requestFocus();
    }//GEN-LAST:event_maquinadoActionPerformed

    private void chiploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiploadActionPerformed

      material.requestFocus();

    }//GEN-LAST:event_chiploadActionPerformed

    private void calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularActionPerformed

        if(sfmtext.getText().compareTo("")!=0){
        
         int max = Integer.valueOf(sfmtext.getText());
         if (material.getSelectedItem().toString().equalsIgnoreCase("ALMUNIO")){
               
             if (max >= 0 && max <= 300) {calcularfinal();}else{JOptionPane.showMessageDialog(null,"El SFM Ingresado no estan en el rango 0 - 300");sfmtext.setBorder(BorderFactory.createLineBorder(Color.RED, 3));sfmtext.setText(""); sfmtext.requestFocus();}
             
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("FIBRA DE VIDRIO")){
            if (max >= 0 && max <= 300) {calcularfinal();}else{JOptionPane.showMessageDialog(null,"El SFM Ingresado no estan en el rango 0 - 300");sfmtext.setBorder(BorderFactory.createLineBorder(Color.RED, 3));sfmtext.setText(""); sfmtext.requestFocus();}
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("PHENOLIC")){
            if (max >= 0 && max <= 300) {calcularfinal();}else{JOptionPane.showMessageDialog(null,"El SFM Ingresado no estan en el rango 0 - 300");sfmtext.setBorder(BorderFactory.createLineBorder(Color.RED, 3));sfmtext.setText(""); sfmtext.requestFocus();}
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("COLD ROLLED 1045")){
                  if (max >= 0 && max <= 65) {calcularfinal();}else{JOptionPane.showMessageDialog(null,"El SFM Ingresado no estan en el rango 0 - 65");sfmtext.setBorder(BorderFactory.createLineBorder(Color.RED, 3));sfmtext.setText(""); sfmtext.requestFocus();}
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("ACERO O1 - A2")){
                 if (max >= 0 && max <= 90) {calcularfinal();}else{JOptionPane.showMessageDialog(null,"El SFM Ingresado no estan en el rango 0 - 90");sfmtext.setBorder(BorderFactory.createLineBorder(Color.RED, 3));sfmtext.setText(""); sfmtext.requestFocus();}
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("ACERO K110")){
                 if (max >= 0 && max <= 70) {calcularfinal();}else{JOptionPane.showMessageDialog(null,"El SFM Ingresado no estan en el rango 0 - 70");sfmtext.setBorder(BorderFactory.createLineBorder(Color.RED, 3));sfmtext.setText(""); sfmtext.requestFocus();}
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("ACERTO INOXIDABLE SERIE 304")){
                 if (max >= 0 && max <= 40) {calcularfinal();}else{JOptionPane.showMessageDialog(null,"El SFM Ingresado no estan en el rango 0 - 40");sfmtext.setBorder(BorderFactory.createLineBorder(Color.RED, 3));sfmtext.setText(""); sfmtext.requestFocus();}
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("BRONCE")){
                if (max >= 0 && max <= 250) {calcularfinal();}else{JOptionPane.showMessageDialog(null,"El SFM Ingresado no estan en el rango 0 - 250");sfmtext.setBorder(BorderFactory.createLineBorder(Color.RED, 3));sfmtext.setText(""); sfmtext.requestFocus();}
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("BRASS - LATON")){
                if (max >= 0 && max <= 250) {calcularfinal();}else{JOptionPane.showMessageDialog(null,"El SFM Ingresado no estan en el rango 0 - 250");sfmtext.setBorder(BorderFactory.createLineBorder(Color.RED, 3));sfmtext.setText(""); sfmtext.requestFocus();} 
        }
        }else {JOptionPane.showMessageDialog(null, "Ingrese el SFM");}
    }//GEN-LAST:event_calcularActionPerformed

    private void diametroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diametroActionPerformed
        double dia = Double.valueOf(diametro.getText());
        if (dia >= 0.0098 && dia <= 0.0625) {
           maquinado.requestFocus();
        } else if (dia >= 0.0635 && dia <= 1.000) {
            sfmtext.requestFocus();
        }
    }//GEN-LAST:event_diametroActionPerformed

    private void sfmtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sfmtextActionPerformed

    calcular.requestFocus();

    }//GEN-LAST:event_sfmtextActionPerformed

    private void diametroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diametroKeyReleased
        double dia = Double.valueOf(diametro.getText());
        if (dia >= 0.0098 && dia <= 0.0625) {
            maquinado.setSelectedItem("SELECCIONAR...");
            chipload.removeAllItems();
            RPM.setText("");
            AVANCE.setText("");
            CUT.setText("");
            sfmtext.setText("100");
            maquinado.setEnabled(false);
            chipload.setEnabled(false);
            sfmtext.setEnabled(false);
            material.setEnabled(false);
        } else if (dia >= 0.0635 && dia <= 1.000) {
           maquinado.setEnabled(true);
            chipload.setEnabled(true);
            sfmtext.setEnabled(true);
            sfmtext.setText("");
            material.setEnabled(true);
        }
    }//GEN-LAST:event_diametroKeyReleased

    private void materialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_materialActionPerformed
           
        if (material.getSelectedItem().toString().equalsIgnoreCase("ALMUNIO")){
            HB.setText("85/95");SFMTEXT.setText("150  -  300");
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("FIBRA DE VIDRIO")){
        HB.setText("85/95");SFMTEXT.setText("150  -  300");
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("PHENOLIC")){
        HB.setText("85/95");SFMTEXT.setText("150  -  300");
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("COLD ROLLED 1045")){
        HB.setText("170/210");SFMTEXT.setText("45  -  65");
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("ACERO O1 - A2")){
        HB.setText("183/212");SFMTEXT.setText("60  -  90");
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("ACERO K110")){
        HB.setText("217/255");SFMTEXT.setText("40  -  70");
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("ACERTO INOXIDABLE SERIE 304")){
        HB.setText("160");SFMTEXT.setText("20  -  40");
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("BRONCE")){
        HB.setText("70");SFMTEXT.setText("200  -  250");
        }
        else if (material.getSelectedItem().toString().equalsIgnoreCase("BRASS - LATON")){
        HB.setText("70");SFMTEXT.setText("200  -  250");
        }
        sfmtext.requestFocus();
    }//GEN-LAST:event_materialActionPerformed

    private void sfmtextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfmtextKeyTyped
   
        
    }//GEN-LAST:event_sfmtextKeyTyped

    private void sfmtextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfmtextKeyReleased
         sfmtext.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
         char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && (c < '.' || c > '.')) {
            evt.consume();
    }
    }//GEN-LAST:event_sfmtextKeyReleased

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
         Inicio tra = new Inicio();
         tra.show();
         this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void RPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RPMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RPMActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Conversiones tra = new Conversiones();
        tra.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    try {
            File path = new File("src/IMG/medidas.pdf");
            Desktop.getDesktop().open(path);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Brocas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Brocas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Brocas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Brocas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Brocas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AVANCE;
    private javax.swing.JTextField CUT;
    private javax.swing.JLabel HB;
    private javax.swing.JTextField RPM;
    private javax.swing.JLabel SFMTEXT;
    private javax.swing.JButton calcular;
    private javax.swing.JComboBox<String> chipload;
    private javax.swing.JTextField diametro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JComboBox<String> maquinado;
    private javax.swing.JComboBox<String> material;
    private javax.swing.JTextField sfmtext;
    // End of variables declaration//GEN-END:variables
}
